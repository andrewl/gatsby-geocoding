{"version":3,"sources":["webpack:///./src/components/leafletmap.js","webpack:///./src/templates/hospital.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["LeafletMap","render","react_default","a","createElement","Map","center","this","props","position","zoom","TileLayer","url","attribution","markerText","Marker","Popup","React","Component","defaultProps","__webpack_require__","d","__webpack_exports__","query","HospitalTemplate","_ref","hospital","data","allGeoFeature","edges","node","featureFields","LATITUDE","LONGITUDE","console","log","layout","NAME","ADDRESS_1","POSTCODE","NUMBER","TYPE","window","components_leafletmap","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Fragment","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","Layout","header","site","siteMetadata","title","paddingTop","Date","getFullYear","href","_755544856"],"mappings":"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","file":"component---src-templates-hospital-js-77a2b960172665380cb3.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet'\nimport './leafletmap.css'\n\n\nclass LeafletMap extends React.Component {\n\n  static propTypes = {\n    /** Latitude and Longitude of the map centre in an array, eg [51, -1] **/\n    position: PropTypes.array,\n\n    /** Initial zoom level for the map (default 13) **/\n    zoom: PropTypes.number,\n\n    /** If set, will display a marker, which when clicked will display this text **/\n    markerText: PropTypes.string\n  }\n\n  static defaultProps = {\n    position: [51, -1],\n    zoom: 13,\n    markerText: \"\"\n  }\n\n  render() {\n\n      return (\n        <Map center={this.props.position} zoom={this.props.zoom}>\n          <TileLayer\n            url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n          />\n          {this.props.markerText !== \"\" &&\n          <Marker position={this.props.position}>\n            <Popup>{this.props.markerText}</Popup>\n          </Marker>\n          }\n        </Map>\n      );\n  }\n}\n\nexport default LeafletMap\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport Layout from '../components/layout'\nimport LeafletMap from '../components/leafletmap'\n\nconst HospitalTemplate = ({ data }) => {\n  let hospital = data.allGeoFeature.edges[0].node.featureFields;\n  let position = [hospital.LATITUDE, hospital.LONGITUDE];\n  console.log(position);\n  return (\n    <Layout>\n    <h1>{hospital.NAME}</h1>\n    <p>{hospital.ADDRESS_1} {hospital.POSTCODE}</p>\n    <p>{hospital.NUMBER}</p>\n    <p>{hospital.TYPE}</p>\n\n    {typeof window !== 'undefined' &&\n        <LeafletMap\n          position={position}\n          zoom={13}\n          markerText={hospital.NAME}\n        />\n    }\n  </Layout>\n);\n}\n\nexport default HospitalTemplate\n\nexport const query = graphql`\n\nquery($url: String!) {\n  allGeoFeature(filter: {featureFields: {URL: {eq: $url}}}) {\n    edges {\n      node {\n        id\n        featureFields {\n          ADDRESS_1\n          NAME\n          POSTCODE\n          LATITUDE\n          LONGITUDE\n          URL\n          TYPE\n          NUMBER\n          ID\n        }\n      }\n    }\n  }\n}\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `#5b6c5d`,\n      marginBottom: `0`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: `My Gatsby Site`,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            paddingTop: 0,\n          }}\n        >\n        <main>{children}</main>\n        </div>\n          <footer style={{\n            padding: `0.5px 1rem`,\n            color: `#5b6c5d`,\n            }}>\n            © {new Date().getFullYear()} <a href=\"https://www.andrewl.net\">Andrew Larcombe</a>, built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a> using Open Data from <a href=\"http://lle.gov.wales/catalogue/item/HealthServices/?lang=en\">Lle Geo-Portal</a>\n          </footer>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}